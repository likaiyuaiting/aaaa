1.编写代码模拟三次密码输入的场景。
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

int main(void)
{
	int i = 3;
	char key[] = "123456";
	char input_key[10];
	while (i)
	{
		printf("\n请输入密码");
		scanf("%s", &input_key);
		if (strcmp(key, input_key) == 0)
		{
			printf("\n密码正确，欢迎使用。\n");
			break;
		}
		else
			printf("\n第%d次密码输入错误，谨慎输入！！！",4-i);
		i--;
	}
	system("pause");
	return 0;
}
2.编写一个程序，可以一直接收键盘字符，如果是小写字符就输出对应的大写字符，如果接收的是大写字符，就输出对应的小写字符，如果是数字不输出。
#include<stdio.h>
#include<stdlib.h>

int main(void)
{
	char ch;
	printf("\n请输入一个字符：");
	while(1)
	{
		scanf("%c", &ch);
		if (ch >= 'A'&&ch <= 'Z')
			printf("\n%c的小写形式为:%c\n", ch, ch + 32);
		else if (ch >= 'a'&&ch <= 'z')
			printf("\n%c的大写形式为:%c\n", ch, ch - 32);
	}
	system("pause");
	return 0;
}

3.完成猜数字游戏。
#include<stdio.h>
#include<stdlib.h>

void menu1()
{
	printf("\n****************************\n"); 
	printf("********   1.play    *******\n");
	printf("********   2.exit    *******\n");
	printf("****************************\n");
}
void geam(int cut)
{
	int input = 0;
	int num = rand() % cut;
	while (1)
	{
		printf("\n我猜数字为：");
		scanf("%d", &input);
		if (input == num)
		{
			printf("恭喜你。答对了\n");
			break;
		}
		else if (input < num)
			printf("答小了，加油哟\n");

		else  printf("答大了，加油哟\n");
	}
}
void menu2()
{
	int input = 0;
	printf("\n****************************\n");
	printf("********   1.入门级    *******\n");
	printf("********   2.普通级  *******\n");
	printf("********   3.高手级   *******\n");
	printf("********   4.大师级  *******\n");
	printf("********   5.魔鬼级  *******\n");
	printf("****************************\n");
	printf("我挑战的级数为：");
	scanf("%d", &input);
	switch (input)
	{
	case 1:
		printf("(0---9)");
		geam(10);
		break;
	case 2:
		printf("(0---30)");
		geam(30);
		break;
	case 3:
		printf("(0---70)");
		geam(70);
		break;
	case 4:
		printf("(0---100)");
		geam(100);
		break;
	case 5:
		printf("(0---500)");
		geam(500);
		break;
	default :
		printf("你输入不符合！！检查后输入\n"); break;
		break;

	}
}

int main()
{
	int input, j, k;
	srand((unsigned int)time(NULL));
	do{
		menu1();
		printf("请输入操作码：");
		scanf("%d",&input);
		switch (input)
		{
		case 1:menu2(); break;
		case 2:exit(1); break;
		default:
			printf("你输入不符合！！检查后输入\n"); break;
		}
	} while (1);
	system("pause");
	return 0;
}
4.完成折半查找代码的编写
#include<stdio.h>
#include<stdlib.h>

int second_search(int a[], int key, int leaf, int right)
{
	while (leaf <= right)
	{
		int m = (leaf + right) / 2;
		if (a[m] == key)
			return m;
		else if(a[m] < key)
			leaf = m;
		else right = m;
	}
	return -1;
}

int main(void)
{
	int a[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
	int key = 0, leaf = 0,right=sizeof(a)/sizeof(a[0])-2,num;
	printf("请输入查找数:");
	scanf("%d", &key);
	num=second_search(a, key, leaf, right);
	if (num == -1)
		printf("\n该数组中没有该数\n");
	else printf("\n该数在数组的第%d位处\n",num);
	system("pause");
	return 0;
}
