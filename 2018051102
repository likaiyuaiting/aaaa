#include <iostream>
using namespace std;


/*
class Test
{
public:
	// 
	Test()
	{

	}

	void FunTest()
	{

	}
	
	// const Test* const 
	void FunTest1()const
	{
		//FunTest();  // Test* const
		//this->_data1 = 1;
		_data2 = 2;
	}

	static void FunTest2()
	{
		//this->_data1 = 1;
		_data2 = 10;
	}

private:
public:
	int _data1;
	static int _data2;
};

int Test::_data2 = 0;

int main()
{
	Test t;
	t._data1 = 10;
	Test::_data2 = 20;
	t._data2 = 30;

	return 0;
}
*/

/*
int main()
{
// 	int* p = (int*)malloc(sizeof(int)*10);
// 	free(p);

	return 0;
}
*/

/*
int main()
{
// 	int* p1 = (int*)malloc(sizeof(int)*10);
// 	if(NULL == p1)
// 		return;
// 
// 	//// 
// 	free(p1);

	int *pTest1 = (int *)malloc(10*sizeof( int));
	int *pTest2 = (int *)malloc(10*sizeof( int));

	//DoSomething();
	pTest1 = pTest2;
	
	free(pTest1);
	free(pTest2);

	return 0;
}
*/

/*
void FunTest()
{
	int* p1 = new int;
	int* p2 = new int(0);
	int* p3 = new int[10];


	delete p1;
	delete p2;
	delete[] p3;
}

int main()
{
	FunTest();
	return 0;
}
*/

/*
int main()
{
	int* p1 = (int*)malloc(sizeof(int));
	int* p2 = (int*)malloc(sizeof(int));
	int* p3 = new int;
	int* p4 = new int;
	int* p5 = new int[10];
	int* p6 = new int[10];


	delete p1;
	delete[] p2;

	free(p3);
	delete[] p4;

	free(p5);
	delete p6;
	return 0;
}malloc--
*/

/*
class Test
{
public:
	Test()
	{
		_data = 0;
		cout<<"Test()"<<endl;
	}

	~Test()
	{
		cout<<"~Test()"<<endl;
	}

private:
	int _data;
};


void FunTest()
{
	Test* p1 = (Test*)malloc(sizeof(Test));
	free(p1);

	Test* p2 = new Test;
	delete p2;

	Test* p3 = new Test[10];
	delete[] p3;
}

int main()
{
	FunTest();
	return 0;
}
*/

/*
class Test
{
public:
	Test()
	{
		_data = 0;
		cout<<"Test()"<<endl;
	}

	~Test()
	{
		cout<<"~Test()"<<endl;
	}

private:
	int _data;
};

void FunTest()
{
// 	Test* p1 = (Test*)malloc(sizeof(Test));
// 	//delete p1;
// 	free(p1);

	//Test* p1 = new Test;
	//free(p1);

	Test* p1 = new Test[10];
	delete p1;
}


int main()
{
	FunTest();
	return 0;
}
*/

class Test
{
public:
	Test()
	{
		_data = 0;
		cout<<"Test()"<<endl;
	}

	~Test()
	{
		cout<<"~Test()"<<endl;
	}

private:
	int _data;
};

void FunTest()
{
	Test* p1 = new Test;

	delete p1;
}


int main()
{
	FunTest();
	return 0;
}
