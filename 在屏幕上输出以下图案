1. 在屏幕上输出以下图案：
      *
     ***
    *****
   *******
  *********
 ***********
*************
 ***********
  *********
   *******
    *****
     ***
      *
#if 0

#include<stdio.h>
#include<stdlib.h>

int main(void)
{
	int i = 0,j=0;
	//打印上半部分
	for (i; i <=6; i++)
	{
		for (j = 6-i; j >0; j--)
			printf(" ");
		for (j=0; j < 2*i-1; j++)
			printf("*");
		printf("\n");
	}
	//打印下半部分
	for (i=5; i>0; i--)
	{
		for (j = i; j <6; j++)
			printf(" ");
		for (j = 0; j < 2 * i - 1; j++)
			printf("*");
		printf("\n");
	}
	system("pause");
	return 0;
}
#endif

#if 1

#include<stdio.h>
#include<stdlib.h>
#include<string.h>

int main(void)
{
	int y;
	int x;
	int r;
	printf("请输入R:");
	scanf("%d",&r);
	for (y = 0; y <= 2 * r; y++) {
		for (x = 0; x <= 2 * r; x++) {
			if (y <= x + r && y >= x - r &&
				y >= -x + r && y <= -x + 3 * r) {
				printf("*");
			}
			else {
				printf(" ");
			}
		}
		printf("\n");
	}
	system("pause");
	return 0;
}
#endif

2.求出0～999之间的所有“水仙花数”并输出。“水仙花数”是指一个三位数，其各位数字的立方和确好等于该数本身，如；153＝1＋5＋3?，则153是一个“水仙花数”。

/*
在数论中，水仙花数（Narcissistic number）也称为自恋数、自幂数、阿姆斯壮数或阿姆斯特朗数（Armstrong number），是指一N位数，其各个数之N次方和等于该数。
例如153、370、371及407就是三位数的水仙花数，其各个数之立方和等于该数：
153 = 1^3 + 5^3 + 3^3。
370 = 3^3 + 7^3 + 0^3。
371 = 3^3 + 7^3 + 1^3。
407 = 4^3 + 0^3 + 7^3。
*/

#include<stdio.h>
#include<stdlib.h>

int main(void)
{
	int sum = 0, num;
	for (int i = 100; i < 1000; i++)
	{
		sum = 0;
		num = i;
		while (i)
		{
			int j = i % 10;
			sum += j*j*j;
			//sum +=  (i%10)*(i%10)*(i%10);
			i /= 10;
		}
		if (num == sum)
			printf("%d是水仙花数\n",num);
	}
	printf("%d\t",sum);
	system("pause");
	return 0;
}

3.
求Sn=a+aa+aaa+aaaa+aaaaa的前5项之和，其中a是一个数字，例如：2+22+222+2222+22222
#include<stdio.h>
#include<stdlib.h>

void Sn(int a)
{
	int i = 0,num=a, sum = 0;
	printf("%d", num);
	for (i = 0; i < 4; i++)
	{
		sum += num;
		num = num*10 + a;
		printf("+%d", num);
	}
	sum += num;
	printf("=%d\n", sum);
}
int main(void)
{
	int sum = 0,a;
	printf("输入a值：");
	scanf("%d",&a);
	Sn(a);
	system("pause");
	return 0;
}

4.编写一个程序，它从标准输入读取C源代码，并验证所有的花括号都正确的成对出现。

{}
{}{}
{{}}
{{{}}}}
{{{}}

}{
{}{}{}}{

#include<stdio.h>
#include<stdlib.h>

int brace, brack, paren;

void in_mutli_comment()
{
	int c = getchar();
	int d = getchar();
	// *a
	while (!(c == '*' && d == '/')) {
		c = d;
		d = getchar();
	}
}

void in_line_comment()
{
	int c;
	while ((c = getchar()) != '\n')
		;
}

void in_quote(char c)
{
	char d;

	while (1) {
		d = getchar();
		if (d == '\\')
			getchar();
		if (d == c)
			break;
	}
}

void find(char c)
{
	if (c == '{')
		brace++;
	else if (c == '[')
		brack++;
	else if (c == '(')
		paren++;
	else if (c == '}')
		brace--;
	else if (c == ']')
		brack--;
	else if (c == ')')
		paren--;
}

int main(void)
{
	int c;

	while ((c = getchar()) != EOF) {
		if (c == '/') {// 有可能进入注释
			int d = getchar();
			if (d == EOF) break;
			if (d == '*') // 多行注释
				in_mutli_comment();
			else if (d == '/') // 单行注释
				in_line_comment();
			else
				find(d);
		}
		else if (c == '\'' || c == '"') { // 进入字符或字符串
			in_quote(c);
		}
		else {
			find(c);
		}
		if (brace < 0) {
			printf("大括号有问题\n");
			brace = 0;
		}
		if (brack < 0) {
			printf("中括号有问题\n");
			brack = 0;
		}
		if (paren < 0) {
			printf("中括号有问题\n");
			paren = 0;
		}
	} // end while 

	if (brace > 0) {
		printf("大括号有问题\n");
	}
	if (brack > 0) {
		printf("中括号有问题\n");
	}
	if (paren > 0) {
		printf("小括号有问题\n");
	}

	system("pause");
	return 0;
}

5.  
5位运动员参加了10米台跳水比赛，有人让他们预测比赛结果
A选手说：B第一，我第三。
B选手说：我第二，E第四。
C选手说：我第一，D第二。
D选手说：C最后，我第三。
E选手说：我第四，A第一。
比赛结束后，每位选手都说对了一半，请编程确定比赛的名次。

6.  
日本某地发生了一件谋杀案，警察通过排查确定杀人凶手必为4个嫌疑犯的一个。以下为4个嫌疑犯的供词。
A说：不是我。
B说：是C。
C说：是D。
D说：C在胡说。
已知3个人说了真话，1个人说的是假话。
现在请根据这些信息，写一个程序来确定到底谁是凶手。


